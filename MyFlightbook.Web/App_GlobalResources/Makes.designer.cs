//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option or rebuild the Visual Studio project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Web.Application.StronglyTypedResourceProxyBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Makes {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Makes() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Resources.Makes", global::System.Reflection.Assembly.Load("App_GlobalResources"));
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} - All Makes.
        /// </summary>
        internal static string AllMakesTitle {
            get {
                return ResourceManager.GetString("AllMakesTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All aircraft of this model are TAAs.
        /// </summary>
        internal static string AllTAA {
            get {
                return ResourceManager.GetString("AllTAA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available in non-glass configurations.
        /// </summary>
        internal static string avionicsAny {
            get {
                return ResourceManager.GetString("avionicsAny", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Glass PFD.
        /// </summary>
        internal static string avionicsGlass {
            get {
                return ResourceManager.GetString("avionicsGlass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum available avionics.
        /// </summary>
        internal static string avionicsLabel {
            get {
                return ResourceManager.GetString("avionicsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Glass PFD, MFD, and integrated Autopilot (TAA).
        /// </summary>
        internal static string avionicsTAA {
            get {
                return ResourceManager.GetString("avionicsTAA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} (Type: {1}).
        /// </summary>
        internal static string DisplayTemplateWithType {
            get {
                return ResourceManager.GetString("DisplayTemplateWithType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Make: {0}.
        /// </summary>
        internal static string editMakeHeader {
            get {
                return ResourceManager.GetString("editMakeHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit this model.
        /// </summary>
        internal static string editModelPrompt {
            get {
                return ResourceManager.GetString("editModelPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mission/Design/Series &apos;{0}&apos; is too long; please provide one that is fewer than 40 characters in length.
        /// </summary>
        internal static string errMDSTooLong {
            get {
                return ResourceManager.GetString("errMDSTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error saving make/model: {0}.
        /// </summary>
        internal static string errSaveMakeFailed {
            get {
                return ResourceManager.GetString("errSaveMakeFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error saving manufacturer - {0}\r\n{1}.
        /// </summary>
        internal static string errSaveManufacturerFailed {
            get {
                return ResourceManager.GetString("errSaveManufacturerFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Model is certified for single-pilot operations, but it isn&apos;t turbine or doesn&apos;t require a type rating.
        /// </summary>
        internal static string errSinglePilotButNotTypeRated {
            get {
                return ResourceManager.GetString("errSinglePilotButNotTypeRated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flaps.
        /// </summary>
        internal static string HasFlaps {
            get {
                return ResourceManager.GetString("HasFlaps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  (ICAO: {0}).
        /// </summary>
        internal static string ICAOTemplate {
            get {
                return ResourceManager.GetString("ICAOTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certified for Single Pilot Operations.
        /// </summary>
        internal static string IsCertifiedSinglePilot {
            get {
                return ResourceManager.GetString("IsCertifiedSinglePilot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Complex.
        /// </summary>
        internal static string IsComplex {
            get {
                return ResourceManager.GetString("IsComplex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constant Speed Prop.
        /// </summary>
        internal static string IsConstantProp {
            get {
                return ResourceManager.GetString("IsConstantProp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Electric.
        /// </summary>
        internal static string IsElectric {
            get {
                return ResourceManager.GetString("IsElectric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Glass Cockpit.
        /// </summary>
        internal static string IsGlass {
            get {
                return ResourceManager.GetString("IsGlass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High Performance.
        /// </summary>
        internal static string IsHighPerf {
            get {
                return ResourceManager.GetString("IsHighPerf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jet.
        /// </summary>
        internal static string IsJet {
            get {
                return ResourceManager.GetString("IsJet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High Performance Until Aug 1997.
        /// </summary>
        internal static string IsLegacyHighPerf {
            get {
                return ResourceManager.GetString("IsLegacyHighPerf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multi-engine Helicopter.
        /// </summary>
        internal static string IsMultiHelicopter {
            get {
                return ResourceManager.GetString("IsMultiHelicopter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retractable Gear.
        /// </summary>
        internal static string IsRetract {
            get {
                return ResourceManager.GetString("IsRetract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Technically Advanced Airplane (TAA).
        /// </summary>
        internal static string IsTAA {
            get {
                return ResourceManager.GetString("IsTAA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tailwheel.
        /// </summary>
        internal static string IsTailwheel {
            get {
                return ResourceManager.GetString("IsTailwheel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Motor Glider/TMG.
        /// </summary>
        internal static string IsTMG {
            get {
                return ResourceManager.GetString("IsTMG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turbine.
        /// </summary>
        internal static string IsTurbine {
            get {
                return ResourceManager.GetString("IsTurbine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turboprop.
        /// </summary>
        internal static string IsTurboprop {
            get {
                return ResourceManager.GetString("IsTurboprop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have {0} aircraft of this model.
        /// </summary>
        internal static string MakeStatsAircraftCount {
            get {
                return ResourceManager.GetString("MakeStatsAircraftCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have {0} flight(s) in this model {1}.
        /// </summary>
        internal static string MakeStatsFlightsCount {
            get {
                return ResourceManager.GetString("MakeStatsFlightsCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to between {0:d} and {1:d}.
        /// </summary>
        internal static string MakeStatsFlightsDateRange {
            get {
                return ResourceManager.GetString("MakeStatsFlightsDateRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View your totals in {0}.
        /// </summary>
        internal static string makeStatsHeader {
            get {
                return ResourceManager.GetString("makeStatsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Totals:.
        /// </summary>
        internal static string makeStatsTotals {
            get {
                return ResourceManager.GetString("makeStatsTotals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create new make/model.
        /// </summary>
        internal static string newMakeHeader {
            get {
                return ResourceManager.GetString("newMakeHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sample Aircraft.
        /// </summary>
        internal static string SampleAircraftTooltip {
            get {
                return ResourceManager.GetString("SampleAircraftTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tip: search for &quot;ICAO:abc&quot; to restrict a search for &quot;abc&quot; to the ICAO designator for the model.
        /// </summary>
        internal static string searchICAOTip {
            get {
                return ResourceManager.GetString("searchICAOTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search.
        /// </summary>
        internal static string searchModels {
            get {
                return ResourceManager.GetString("searchModels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search for models.
        /// </summary>
        internal static string searchTip {
            get {
                return ResourceManager.GetString("searchTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type a model to quickly find it.
        /// </summary>
        internal static string searchTipQuick {
            get {
                return ResourceManager.GetString("searchTipQuick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tip: you can use wildcards * to match 0 or more characters, or ? to match a single character..
        /// </summary>
        internal static string searchWildcardTip {
            get {
                return ResourceManager.GetString("searchWildcardTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;TAA = Technically Advanced Airplane as defined in &lt;a href=&quot;https://www.law.cornell.edu/cfr/text/14/61.129&quot; target=&quot;_blank&quot;&gt;FAR 61.129(j)&lt;/a&gt; as of Aug 27, 2018.&lt;/p&gt;
        ///&lt;p&gt;This requires:&lt;/p&gt;
        ///&lt;ul&gt;
        ///    &lt;li&gt;A continuously visible PFD (replacing the standard &quot;six-pack&quot;)&lt;/li&gt;
        ///    &lt;li&gt;A continuously visible MFD, including moving map with airplane&apos;s location&lt;/li&gt;
        ///    &lt;li&gt;An integrated 2-axis autopilot.&lt;/li&gt;
        ///&lt;/ul&gt;.
        /// </summary>
        internal static string TAADefinition {
            get {
                return ResourceManager.GetString("TAADefinition", resourceCulture);
            }
        }
    }
}
